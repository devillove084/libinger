#!/bin/sh

# Skip the following LLVM optimization passes, which cause problems for us.
readonly BADPASSES="function-attrs inline prune-eh"

epiloguefun=""
epiloguevar=""
if [ "$1" = "-e" -a "$#" -ge "2" ]
then
	epiloguefun="$2"
	epiloguevar="INGERC_EPILOGUE=$epiloguefun"
	shift 2
fi

# Temporarily drop any --emit or -emit because it would prevent us from getting LLVM debug output.
args="`printf "'%s' " "$@" | sed "s/'-\?-emit\(' '\|=\)[^']\+'//"`"

finalstage="`echo "$*" | sed -n 's/.*-\?-emit[ =]\(\S\+\).*/\1/p'`"
crate="`eval rustc $args --print crate-name 2>/dev/null`"
if [ "$?" -ne "0" ]
then
	echo "USAGE: $0 [-e <epilogue notification function name>] [args]... <filename>"
	echo
	echo "If the -e switch is provided, it must come first.  These other switches are supported:"
	echo "\t--emit <llvm-ir|ir|asm>"
	echo "\trustc's usual options..."
	echo
	exec rustc --help
fi

set -e

# These -Ccodegen-units=1 switches prevent unreadable output due to interleaving.
allpasses="`eval rustc $args -Cllvm-args=-debug-pass=Arguments -Ccodegen-units=1 2>&1`"
autopasses="`eval rustc $args -Cllvm-args=-debug-pass=Arguments -Cno-prepopulate-passes -Ccodegen-units=1 2>&1`"
rm -f "$crate"

# Each line is a grep-compatible command-line switch.
autoswitches="`echo "$autopasses" | sed -e's/^/-e"/' -e's/: \+/: \\\\+/g' -e's/$/"/'`"

manualpasses="`echo "$allpasses" | eval grep -vx $autoswitches`"

# Each line is a pass name, without the leading hyphen.
manualnames="`echo "$manualpasses" | sed -e's/[^-]\+-//' -e's/ -/\n/g'`"
badnames="`echo "$BADPASSES" | tr " " "\n"`"

# Each line is a one-word grep-compatible command-line switch.
manualswitches="`echo "$badnames" | sed -e's/^/-e/'`"

passnames="`echo "$manualnames" | grep -vxF $manualswitches`"

dir="`dirname "$0"`"
std="`LD_TRACE_LOADED_OBJECTS= rustc | grep -o 'std-[^.]\+' | uniq`"
eval rustc $args --emit llvm-ir -Cno-prepopulate-passes -Cpasses="'$passnames'"
if [ "$finalstage" = "llvm-ir" ]
then
	exit 0
fi

"$dir/ingerc.ts" "$crate.ll" $epiloguefun
if [ "$finalstage" = "ir" ]
then
	exit 0
fi

eval LD_PRELOAD="'$dir/libingerc.so'" "$epiloguevar" llc "'$crate.ll'" >/dev/null
if [ "$finalstage" = "asm" ]
then
	exit 0
fi

linkargs="`printf "'%s' " "$@" | sed -e"s/\('-C\)' '\(link-arg=\)/\1\2/g" -e"s/' '/'\n'/g" | sed -n "s/^'-Clink-arg=\(.\+\)'$/\1/p"`"
eval cc -no-pie -Wa,-gdwarf-5 -o "'$crate'" "'$crate.s'" $linkargs "'-l$std'"

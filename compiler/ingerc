#!/bin/sh

# Skip the following LLVM optimization passes, which cause problems for us.
readonly BADPASSES="function-attrs inline prune-eh"

crate="`rustc "$@" --print crate-name 2>/dev/null`"
if [ "$?" -ne "0" ]
then
	exec rustc --help
fi

set -e

# Temporarily drop any --emit or -emit because it would prevent us from getting LLVM debug output.
args="`printf "'%s' " "$@" | sed "s/'-\?-emit\(' '\|=\)[^']\+'//"`"

# These -Ccodegen-units=1 switches prevent unreadable output due to interleaving.
allpasses="`eval rustc $args -Cllvm-args=-debug-pass=Arguments -Ccodegen-units=1 2>&1`"
autopasses="`eval rustc $args -Cllvm-args=-debug-pass=Arguments -Cno-prepopulate-passes -Ccodegen-units=1 2>&1`"

# Each line is a grep-compatible command-line switch.
autoswitches="`echo "$autopasses" | sed -e's/^/-e"/' -e's/: \+/: \\\\+/g' -e's/$/"/'`"

manualpasses="`echo "$allpasses" | eval grep -vx $autoswitches`"

# Each line is a pass name, without the leading hyphen.
manualnames="`echo "$manualpasses" | sed -e's/[^-]\+-//' -e's/ -/\n/g'`"
badnames="`echo "$BADPASSES" | tr " " "\n"`"

# Each line is a one-word grep-compatible command-line switch.
manualswitches="`echo "$badnames" | sed -e's/^/-e/'`"

passnames="`echo "$manualnames" | grep -vxF $manualswitches`"

dir="`dirname "$0"`"
std="`LD_TRACE_LOADED_OBJECTS= rustc | grep -o 'std-[^.]\+' | uniq`"
rustc "$@" --emit llvm-ir -Cno-prepopulate-passes -Cpasses="$passnames"
"$dir/ingerc.ts" "$crate.ll"
LD_PRELOAD="$dir/libingerc.so" llc "$crate.ll" >/dev/null
